<?php

namespace Huytt\Auth\Tests\Feature;

use Huytt\Admin\Repositories\AdminUserRepository;
use Huytt\Admin\Tests\Unit\AdminTest;
use Huytt\User\Repositories\UserRepository;
use Huytt\User\Tests\Unit\UserTest;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AuthTest extends TestCase
{
    use DatabaseTransactions, WithFaker;

    /** @var UserRepository */
    protected $userRepo;

    /** @var AdminUserRepository */
    protected $adminRepo;

    protected $userTest;
    protected $adminTest;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->userRepo = new UserRepository($this->app);
        $this->adminRepo = new AdminUserRepository($this->app);
        $this->userTest = new UserTest();
        $this->adminTest = new AdminTest();
        $this->userTest->setUp();
        $this->adminTest->setUp();

        $this->setUpFaker();
    }

    public function testUserAuth()
    {
        $userInfo = $this->userTest->testRegister();
        $payload = [
            'email' => $userInfo['email'],
            'password' => $userInfo['password'],
        ];

        $reponse = $this
            ->json('post', 'api/v1/login', $payload);

//        echo json_encode($reponse)."\n";
        $reponse->assertStatus(200);
        $token = $reponse->decodeResponseJson()['token'] ?? null;
        $this->assertNotNull($token);

        return $token;
    }

    public function testAdminUserAuth()
    {
        $userInfo = $this->adminTest->testRegister();
        $payload = [
            'email' => $userInfo['email'],
            'password' => $userInfo['password'],
        ];

        $reponse = $this
            ->json('post', 'api/v1/admin/login', $payload);

//        echo json_encode($reponse)."\n";
        $reponse->assertStatus(200);
        $token = $reponse->decodeResponseJson()['token'] ?? null;
        $this->assertNotNull($token);

        return $token;
    }
}
